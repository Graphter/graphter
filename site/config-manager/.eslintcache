[{"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/index.tsx":"1","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/reportWebVitals.ts":"2","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/services/configService.ts":"3","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/models/config.ts":"4","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/models/page.ts":"5","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/node-renderers/id/index.ts":"6","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/node-renderers/id/registerIdNodeRenderer.ts":"7","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/node-renderers/id/IdNodeRenderer.tsx":"8","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/App.tsx":"9","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/components/ManageConfig/index.ts":"10","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/components/ManageConfig/ManageConfig.tsx":"11","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/components/List/List.tsx":"12","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/components/Edit/Edit.tsx":"13","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/components/List/ListItem.tsx":"14"},{"size":604,"mtime":1610531183815,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609618546742,"results":"17","hashOfConfig":"16"},{"size":666,"mtime":1610199942588,"results":"18","hashOfConfig":"16"},{"size":391,"mtime":1610439983663,"results":"19","hashOfConfig":"16"},{"size":2867,"mtime":1609191466524,"results":"20","hashOfConfig":"16"},{"size":119,"mtime":1610355055096,"results":"21","hashOfConfig":"16"},{"size":357,"mtime":1610354543268,"results":"22","hashOfConfig":"16"},{"size":1782,"mtime":1610527566307,"results":"23","hashOfConfig":"16"},{"size":1346,"mtime":1610531053407,"results":"24","hashOfConfig":"16"},{"size":71,"mtime":1610531037586,"results":"25","hashOfConfig":"16"},{"size":937,"mtime":1610531214101,"results":"26","hashOfConfig":"16"},{"size":1757,"mtime":1610196592567,"results":"27","hashOfConfig":"16"},{"size":2204,"mtime":1610531256883,"results":"28","hashOfConfig":"16"},{"size":634,"mtime":1610531430373,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"10a7119",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/index.tsx",["63","64"],"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/reportWebVitals.ts",[],["65","66"],"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/services/configService.ts",["67","68","69"],"import { GetResult, ListResult, SaveResult, Service } from \"@graphter/core\";\n\nimport pageConfig from '../models/page'\n\nexport const configService: Service =  {\n  list: (modelId: string, skip: number, take: number) => {\n    return Promise.resolve({\n      items: [\n        pageConfig\n      ],\n      count: 1,\n      skip: 0,\n      take: 10\n    })\n  },\n  get: (modelId: string, instanceId: string | number) => {\n    if(instanceId !== 'page') return Promise.resolve({\n      item: null\n    })\n    return Promise.resolve({\n      item: pageConfig,\n      version: 1\n    })\n  },\n  save: (modelId: string, instance: any) => {\n    throw new Error('Cannot save config yet')\n  }\n}","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/models/config.ts",["70","71"],"import { AllValidationExecutionStages } from \"@graphter/core\";\n\nexport default {\n  id: 'config',\n  name: 'Graphter Config',\n  descriptions: 'The configuration that drives Graphter models',\n  type: 'object',\n  children: [\n    {\n      id: 'id',\n      name: 'ID',\n      description: 'The ID of the model',\n      type: 'id',\n      validation: [\n       \n      ]\n    }\n  ],\n  validation: [\n\n  ],\n}","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/models/page.ts",["72"],"import { AllValidationExecutionStages } from \"@graphter/core\";\n\nexport default {\n  id: 'page',\n  name: 'Page',\n  descriptions: 'A page in a blog',\n  type: 'object',\n  children: [\n    {\n      id: 'title',\n      name: 'Title',\n      description: 'The page title',\n      type: 'string',\n      validation: [\n        {\n          type: 'json-schema',\n          executeOn: AllValidationExecutionStages,\n          displayMode: [ 'INLINE', 'SUMMARY', 'MODAL' ],\n          options: {\n            error: 'Must be at least 1 character longss',\n            schema: {\n              \"minLength\": 1\n            },\n          }\n        },\n        {\n          type: 'json-schema',\n          executeOn: AllValidationExecutionStages,\n          displayMode: [ 'INLINE', 'SUMMARY', 'MODAL' ],\n          options: {\n            error: 'Cannot be more than 255 characters long',\n            schema: {\n              \"maxLength\": 255\n            },\n          }\n        }\n      ]\n    },\n    {\n      id: 'metadata',\n      name: 'Metadata',\n      type: 'string'\n    },\n    {\n      id: 'authors',\n      name: 'Authors',\n      description: 'The authors',\n      type: 'list',\n      children: [\n        {\n          id: 'author',\n          type: 'object',\n          children: [\n            {\n              id: 'name',\n              name: 'Name',\n              description: ' ',\n              type: 'string',\n              validation: [\n                {\n                  type: 'json-schema',\n                  executeOn: AllValidationExecutionStages,\n                  displayMode: [ 'INLINE', 'SUMMARY', 'MODAL' ],\n                  options: {\n                    error: 'Must be at least 1 character long',\n                    schema: {\n                      \"minLength\": 1\n                    },\n                  }\n                },\n              ]\n            },\n            {\n              id: 'location',\n              name: 'Location',\n              description: ' ',\n              type: 'string'\n            }\n          ]\n        }\n      ]\n    },\n    {\n      id: 'body',\n      name: 'Body',\n      description: 'The content of the page',\n      type: 'string'\n    },\n    {\n      id: 'tags',\n      name: 'Tags',\n      description: 'Page tags',\n      type: 'list',\n      listItemType: 'string',\n      children: [\n        {\n          id: 'tag',\n          name: 'Tag',\n          description: 'A tag',\n          type: 'string',\n          default: '',\n          validation: [\n            {\n              type: 'json-schema',\n              executeOn: AllValidationExecutionStages,\n              displayMode: [ 'INLINE', 'SUMMARY', 'MODAL' ],\n              options: {\n                error: 'Must be at least 1 character long',\n                schema: {\n                  \"minLength\": 1\n                },\n              }\n            },\n          ],\n        }\n      ]\n    }\n  ],\n  validation: [\n\n  ],\n}","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/node-renderers/id/index.ts",[],"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/node-renderers/id/registerIdNodeRenderer.ts",[],"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/node-renderers/id/IdNodeRenderer.tsx",["73","74","75"],"import React, { useEffect, useState } from \"react\";\nimport { NodeRendererProps } from \"@graphter/core\";\nimport { createDefault, useNodeData, useNodeValidation } from \"@graphter/renderer-react\";\nimport s from './IdNodeRenderer.module.css'\nimport { nanoid } from 'nanoid'\n\nconst filterRegExp = /[^a-z0-9\\-]/\nconst filterRegExpGlobal = /[^a-z0-9\\-]/g\n\nfunction IdNodeRenderer(\n  {\n    config,\n    originalNodeData,\n    committed = true,\n    path\n  }: NodeRendererProps\n){\n  const isNew = typeof originalNodeData === 'undefined'\n  if(isNew) originalNodeData = createDefault(config, nanoid)\n  const [ touched, setTouched ] = useState(false)\n  const [ nodeData, setNodeData ] = useNodeData(path, config, originalNodeData, committed)\n  const validationResults = useNodeValidation(path)\n  const showFixButton = filterRegExp.test(nodeData)\n  return (\n    <>\n      <input\n        type='text'\n        value={nodeData}\n        data-nodetype='id'\n        data-nodepath={path.join('/')}\n        className={s.input}\n        onChange={(e) => {\n          if(!touched) setTouched(true)\n          setNodeData && setNodeData(e.currentTarget.value);\n        }} />\n      {touched && (\n        showFixButton ? (\n          <button\n            type='button'\n            onClick={() => {\n              setNodeData(nodeData.toLowerCase().replace(filterRegExpGlobal, '-'))\n            }}\n          >Fix</button>\n        ) : (\n          <span>Ok</span>\n        )\n      )}\n      {touched &&\n      validationResults.value === nodeData &&\n      validationResults.results.map((result, i) => (\n        result.valid ? null : (\n          <div className={s.error} key={i} data-testid='validation-error'>\n            {result.errorMessage}\n          </div>\n        )\n      ))}\n    </>\n  )\n}\n\nexport default IdNodeRenderer","/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/App.tsx",[],"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/components/ManageConfig/index.ts",[],"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/components/ManageConfig/ManageConfig.tsx",["76"],"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/components/List/List.tsx",["77","78","79","80"],"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/components/Edit/Edit.tsx",["81"],"/Users/jonathanpritchard/Projects/supersonicanaconda/site/config-manager/src/components/List/ListItem.tsx",[],{"ruleId":"82","severity":1,"message":"83","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":15},{"ruleId":"82","severity":1,"message":"86","line":4,"column":42,"nodeType":"84","messageId":"85","endLine":4,"endColumn":48},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"82","severity":1,"message":"91","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":19},{"ruleId":"82","severity":1,"message":"92","line":1,"column":21,"nodeType":"84","messageId":"85","endLine":1,"endColumn":31},{"ruleId":"82","severity":1,"message":"93","line":1,"column":33,"nodeType":"84","messageId":"85","endLine":1,"endColumn":43},{"ruleId":"82","severity":1,"message":"94","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":38},{"ruleId":"95","severity":1,"message":"96","line":3,"column":1,"nodeType":"97","endLine":22,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":3,"column":1,"nodeType":"97","endLine":122,"endColumn":2},{"ruleId":"82","severity":1,"message":"98","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":7,"column":31,"nodeType":"101","messageId":"102","endLine":7,"endColumn":32,"suggestions":"103"},{"ruleId":"99","severity":1,"message":"100","line":8,"column":37,"nodeType":"101","messageId":"102","endLine":8,"endColumn":38,"suggestions":"104"},{"ruleId":"82","severity":1,"message":"105","line":12,"column":9,"nodeType":"84","messageId":"85","endLine":12,"endColumn":17},{"ruleId":"82","severity":1,"message":"106","line":21,"column":5,"nodeType":"84","messageId":"85","endLine":21,"endColumn":10},{"ruleId":"82","severity":1,"message":"107","line":22,"column":5,"nodeType":"84","messageId":"85","endLine":22,"endColumn":12},{"ruleId":"82","severity":1,"message":"108","line":23,"column":5,"nodeType":"84","messageId":"85","endLine":23,"endColumn":10},{"ruleId":"82","severity":1,"message":"109","line":24,"column":5,"nodeType":"84","messageId":"85","endLine":24,"endColumn":10},{"ruleId":"82","severity":1,"message":"110","line":37,"column":21,"nodeType":"84","messageId":"85","endLine":37,"endColumn":38},"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'GetResult' is defined but never used.","'ListResult' is defined but never used.","'SaveResult' is defined but never used.","'AllValidationExecutionStages' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["113","114"],["115","116"],"'location' is assigned a value but never used.","'items' is assigned a value but never used.","'loading' is assigned a value but never used.","'count' is assigned a value but never used.","'error' is assigned a value but never used.","'validationResults' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"117","fix":"118","desc":"119"},{"messageId":"120","fix":"121","desc":"122"},{"messageId":"117","fix":"123","desc":"119"},{"messageId":"120","fix":"124","desc":"122"},"removeEscape",{"range":"125","text":"126"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"127","text":"128"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"129","text":"126"},{"range":"130","text":"128"},[301,302],"",[301,301],"\\",[342,343],[342,342]]