context('Edit', () => {
  before(() => {
    cy.visit('/page/0')
  })
  it('should render the correct nodes', () => {
    cy.get('[data-nodepath="page/0/title"]')
      .should('exist')

    cy.get('[data-nodepath="page/0/metadata"]')
      .should('exist')
    cy.get('[data-nodepath="page/0/authors"]')
      .find('[data-testid="items"]')
      .children()
      .should('have.length', 1)
      .then(children => {
        cy.wrap(children)
          .find('[data-nodepath="page/0/authors/0/name"]')
          .should('exist')
        cy.wrap(children)
          .find('[data-nodepath="page/0/authors/0/location"]')
          .should('exist')
      })
    cy.get('[data-nodepath="page/0/authors"]')
      .find('[data-testid="add-item"]')
      .should('exist')
      .then(addItem => {
        cy.wrap(addItem)
          .find('[data-nodepath="page/0/authors/1/name"]')
          .invoke('val')
          .should('equal', '')
        cy.wrap(addItem)
          .find('[data-nodepath="page/0/authors/1/location"]')
          .invoke('val')
          .should('equal', '')
      })
      cy.get('[data-nodepath="page/0/body')
        .should('exist')
    cy.get('[data-nodepath="page/0/tags"]')
      .find('[data-testid="items"]')
      .children()
      .should('have.length', 4)
      .then(children => {
        cy.wrap(children)
          .find('[data-nodepath="page/0/tags/0"]')
          .should('exist')
        cy.wrap(children)
          .find('[data-nodepath="page/0/tags/1"]')
          .should('exist')
        cy.wrap(children)
          .find('[data-nodepath="page/0/tags/2"]')
          .should('exist')
        cy.wrap(children)
          .find('[data-nodepath="page/0/tags/3"]')
          .should('exist')
      })
  })

  it('should allow text to change', () => {
    cy.get('[data-nodepath="page/0/title"]')
      .type('{selectall}')
      .type('This is a new title')
      .should('have.value', 'This is a new title')
  })

  it('should allow list items to be changed', () => {
    cy.get('[data-nodepath="page/0/authors/0/name"]')
      .type('{selectall}')
      .type('Ann Other')
      .should('have.value', 'Ann Other')
  })

  it('should allow list items to be removed', () => {
    cy.get('[data-nodepath="page/0/authors"]')
      .find('[data-testid="items"]')
      .children()
      .should('have.length', 1)
    cy.get('[data-nodepath="page/0/authors"]')
      .find('[data-testid="remove-item-btn"]')
      .click()
    cy.get('[data-nodepath="page/0/authors"]')
      .then(authors => {
        cy.wrap(authors)
          .find('[data-testid="items"]')
          .children()
          .should('have.length', 0)
        cy.wrap(authors)
          .find('[data-testid="add-item"]')
          .then(addItem => {
            cy.wrap(addItem)
              .find('[data-nodepath="page/0/authors/0/name"]')
              .should('have.value', '')
            cy.wrap(addItem)
              .find('[data-nodepath="page/0/authors/0/location"]')
              .should('have.value', '')
          })
      })
  })

  it('should allow complex list items to be added', () => {
    cy.get('[data-nodepath="page/0/authors"]')
      .find('[data-testid="items"]')
      .children()
      .should('have.length', 0)
    cy.get('[data-nodepath="page/0/authors"]')
      .then(authors => {
        cy.wrap(authors)
          .find('[data-testid="add-item"]')
          .then(addItem => {
            cy.wrap(addItem)
              .find('[data-nodepath="page/0/authors/0/name"]')
              .should('have.value', '')
              .type('AAnew Author')
            cy.wrap(addItem)
              .find('[data-nodepath="page/0/authors/0/location"]')
              .should('have.value', '')
              .type('Madeuppe Land')
            cy.wrap(addItem)
              .find('[data-testid="add-item-btn"]')
              .click()
          })
        cy.wrap(authors)
          .find('[data-testid="items"]')
          .children()
          .should('have.length', 1)
          .first()
          .then(firstChild => {
            cy.wrap(firstChild)
              .find('[data-nodepath="page/0/authors/0/name"]')
              .should('have.value', 'AAnew Author')
            cy.wrap(firstChild)
              .find('[data-nodepath="page/0/authors/0/location"]')
              .should('have.value', 'Madeuppe Land')
          })
        cy.wrap(authors)
          .find('[data-testid="add-item"]')
          .then(addItem => {
            cy.wrap(addItem)
              .find('[data-nodepath="page/0/authors/1/name"]')
              .should('have.value', '')
            cy.wrap(addItem)
              .find('[data-nodepath="page/0/authors/1/location"]')
              .should('have.value', '')
          })
      })

  })

  it('should show validation errors', () => {
    cy.get('[data-nodepath="page/0/title"]')
      .type('{selectall}')
      .type('{del}')
    cy.get('[data-testid=validation-error]')
      .should('be.visible')
  })
})